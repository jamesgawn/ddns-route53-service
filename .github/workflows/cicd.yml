name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  unit-test:
    name: Unit Test Check (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set-up Node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
        key: ${{ runner.os }}-build-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-npm-
    - run: npm install
    - run: npm test
      env:
        CI: true
  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-npm-
      - run: npm install
      - run: npm run lint
        env:
          CI: true
  coverage:
    name: Coverage Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-npm-
      - run: npm install
      - run: npm run coverage
        env:
          CI: true
  docker-publish:
    name: Build & Publish Docker Image
    runs-on: ubuntu-latest
    needs: [coverage, lint, unit-test]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
        id: dockerpublish
      - name: Checkout
        uses: actions/checkout@v2
      - uses: juliangruber/read-file-action@v1
        with:
          path: ./VERSION
      - run: echo ${steps.dockerpublish.outputs.content}